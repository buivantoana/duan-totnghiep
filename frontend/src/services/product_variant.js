import axios from "../axios"; // Thay báº±ng URL backend cá»§a báº¡n

const productVariantService = {
   // ðŸ“Œ Láº¥y danh sÃ¡ch táº¥t cáº£ biáº¿n thá»ƒ sáº£n pháº©m
   getAllProductVariants: async () => {
      try {
         const response = await axios.get("/api/product-variant");
         return response.data;
      } catch (error) {
         console.error('Error fetching product variants:', error);
         throw error;
      }
   },

   getVariantsByProductId: async (id) => {
      try {
         const response = await axios.get(`/api/product-variant/product/${id}`);
         return response.data;
      } catch (error) {
         console.error('Error fetching product variants:', error);
         throw error;
      }
   },

   // ðŸ“Œ Láº¥y chi tiáº¿t biáº¿n thá»ƒ sáº£n pháº©m theo ID
   getDetailProductVariant: async (id) => {
      try {
         const response = await axios.get(`/api/product-variant/${id}`);
         return response.data;
      } catch (error) {
         console.error('Error fetching product variant details:', error);
         throw error;
      }
   },

   // ðŸ“Œ ThÃªm biáº¿n thá»ƒ sáº£n pháº©m má»›i
   createProductVariant: async (data) => {
      try {
         const response = await axios.post("/api/product-variant", data);
         return response;
      } catch (error) {
         console.error('Error creating product variant:', error);
         throw error;
      }
   },

   // ðŸ“Œ Cáº­p nháº­t biáº¿n thá»ƒ sáº£n pháº©m
   updateProductVariant: async (id, data) => {
      try {
         const response = await axios.put(`/api/product-variant/${id}`, data);
         return response;
      } catch (error) {
         console.error('Error updating product variant:', error);
         throw error;
      }
   },

   // ðŸ“Œ XÃ³a biáº¿n thá»ƒ sáº£n pháº©m
   deleteProductVariant: async (id) => {
      try {
         const response = await axios.delete(`/api/product-variant/${id}`);
         return response;
      } catch (error) {
         console.error('Error deleting product variant:', error);
         throw error;
      }
   }
};

export default productVariantService;
